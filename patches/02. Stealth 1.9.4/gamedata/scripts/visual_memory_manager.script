-- Visual Memory Manager exports
-- by Alundaio

-- called from engine
-- This occurs during the visible check. If value >= visiblity_threshold then object is considered visible
-- warning npc and who can be nil sometimes

-- luminocity rewritten from scratch by Andruxa

local jacket_t = {
	["o_medium"] = 2,
	["o_sci"] = 2,
	["o_light"] = 1.35,
	["o_heavy"] = 4.5,
}

local jacketmult = 1
local summ = 0
local renderer = get_console_cmd(0,"renderer")
local dxeight = 'renderer_r1'
local is_r1 = (renderer == dxeight)
local pewpewmult = 0
local get_camo_k = 0

local alert = false
local mcm_dist_mult = 1
local mcm_vel_mult = 1
local mcm_weight_mult = 1
local mcm_lum_mult = 1
local mcm_low = 0.25
local mcm_crouch = 0.4
local enable_debug = false
local michiko_patch = false
local alert_mult = 60

function get_visible_value(npc,who,time_delta,time_quant,luminocity,velocity_factor,velocity,distance,object_distance,always_visible_distance)
	distance = distance <= 0 and 0.00001 or distance

--============= luminosity =============
	local npcxnpc_flash = true	-- Boosts NPC's vision when they see other NPC with active flashlight from afar, change to 'false' if you feel like it tanks your FPS too hard and let me know please

	-- main
	local hrs = level.get_time_hours() + level.get_time_minutes() / 60
	local who_lum = who:get_luminocity()
	local lumin_r1 = luminocity <= 0 and 0.0001 or luminocity
	local lumin_r2 = (who_lum + who_lum^0.5 + lights_lum()) / 3.02

	local lumin_r2_night = clamp((lumin_r2 * 2)^1.6, 0.01, 0.99)
	local lumin_r2_night_michiko = clamp(((lumin_r2 * 7)^3), 0.01, 0.99)
	lumin_r2_night = michiko_patch and lumin_r2_night_michiko or lumin_r2_night

	local is_night = (hrs > 21 or hrs < 4)
	local is_night_michiko = (hrs > 21 or hrs < 5)
	is_night = michiko_patch and is_night_michiko or is_night

	lumin_r2 = is_night and lumin_r2_night or lumin_r2

	luminocity = is_r1 and lumin_r1 or lumin_r2

	-- campfire/underground
	luminocity = luminocity + camp_lum.luminocity_inc

	if level_weathers.bLevelUnderground then
		luminocity = luminocity + 0.35
	end

	-- flashlights
	local torch = db.actor:item_in_slot(10)
	local flash = db.actor:item_in_slot(9)
	local npc_torch = (npc and IsStalker(npc) and npc:object("device_torch"))
	local who_torch = (who and IsStalker(who) and who:object("device_torch"))
	local who_dist = 20 / object_distance
	local npc_dist = 10 / object_distance

	local luminocity_flash_r2 = luminocity
	local actor_torch_active = (who and (who:id() == db.actor:id()) and ( (torch and torch:torch_enabled()) or (flash and (flash:section() == "device_flashlight") and db.actor:active_detector()) ))
	local luminocity_flash_actor_r2 = luminocity_flash_r2 + who_dist
	local npc_torch_active = (npc_torch and npc_torch:attachable_item_enabled() and (object_distance <= 25 and distance > 90))
	local luminocity_flash_npc_r2 = luminocity_flash_r2 + npc_dist
	local npc_to_npc_torch_active = npcxnpc_flash and who_torch and who_torch:attachable_item_enabled()

	luminocity_flash_r2 = (actor_torch_active or npc_to_npc_torch_active) and luminocity_flash_actor_r2 or luminocity_flash_r2
	luminocity_flash_r2 = npc_torch_active and luminocity_flash_npc_r2 or luminocity_flash_r2

	luminocity = is_r1 and luminocity or luminocity_flash_r2

--======== crouch/camo/weight ====================
	local cr = IsMoveState('mcCrouch')
	local acc = IsMoveState('mcAccel')
	local crouch = (cr and (not acc)) and (mcm_crouch) or 1
	crouch = (cr and acc) and mcm_low or crouch

	local camo_checks = get_camo_k > 0 and object_distance >= 10
	local camo_dist = 1 - object_distance * 0.018
	local alert_factor = (alert and (object_distance <= 60)) and (alert_mult / object_distance) or 1
	local camo_tot = get_camo_k / 160 * camo_dist * crouch * alert_factor
	camo_tot = clamp(camo_tot, 0.01, 1.0)
	local camo_x = camo_checks and camo_tot or 1

	local w = db.actor:get_total_weight()
	local wei = math.exp(w/100)
	local odw = 1.1 - 0.02 * object_distance
	local obj_dist_w = odw > 0.01 and odw or 0.01

--====== danger_mult/scheme_mult ===========
	local npc_alive = npc and npc:alive()
	local is_mutant = npc_alive and IsMonster(npc)
	local is_stalker = npc_alive and IsStalker(npc)
	local danger_mult = is_mutant and (0.003 / time_quant) or 1
	danger_mult = is_stalker and (time_quant * 2) or danger_mult

	local scheme_mult = 1
	if npc_alive then
		local st = db.storage[npc:id()]
		scheme_mult = (st.active_scheme == "guard" or st.active_scheme == "sniper") and 0.5 or 1
	end

--============== total =============================
	local shot_mult = pewpewmult
	local eq_dist = ((distance - object_distance / 1.15) / distance) * mcm_dist_mult
	local lum_dist = (distance - object_distance / 1.35) / distance
	local Velocity = (1 + velocity_factor * velocity) * mcm_vel_mult
	local wnj = wei * jacketmult * obj_dist_w * mcm_weight_mult
	local weight = wnj > 1 and wnj or 1
	local Luminocity = (33 * luminocity * lum_dist + shot_mult) * mcm_lum_mult
	local step_incr = Luminocity * Velocity * eq_dist * weight * crouch * danger_mult * camo_x * scheme_mult
--===============================================


-- ==== dbg ==========
	if enable_debug then
		local wthrs = level_weathers.get_weather_manager():get_curr_weather_preset()
		local obj = level.get_target_obj()
		local r = round_idp

		if (obj and (obj:alive()) and (who and (who:id() == db.actor:id() or who:id() == obj:id() ) and npc and (npc:id() == db.actor:id() or npc:id() == obj:id() ))) and (not obj:see(db.actor)) then
			summ = summ + step_incr
		elseif obj and obj:see(db.actor) then
			summ = 0
			news_manager.send_tip(db.actor, "Spotted", 0, nil, 1500)
		end

		if obj and (obj:alive()) and (who and (who:id() == db.actor:id() or who:id() == obj:id() ) and npc and (npc:id() == db.actor:id() or npc:id() == obj:id() )) then
			printf('---------------------------------------------------------------')
			printf("Weather is: " .. (wthrs))
			printf("1. Luminocity  ---------- %s", Luminocity)
			printf("1.a) luminocity --------- %s", luminocity)
			printf("1.b) lights_lum() ------- %s", lights_lum())
			printf("1.c) who:get_lum() ---- %s", who:get_luminocity())
			printf("2. Velocity ------------- %s", Velocity)
			printf("3. dist_original --------- %s", distance)
			printf("4. weight&outfit ------- %s", weight)
			printf("5. crouch ------------- %s", crouch)
			printf("6.a) shot_mult --------- %s", shot_mult)
			printf("6.b) danger ------------ %s", danger_mult)
			printf("6.c) camo ------------- %s", camo_x)
			printf("6.d) ai scheme --------- %s", scheme_mult)
			printf("6.e) get_camo_k ------ %s", get_camo_k)
			printf("6.f) jacketmult --------- %s", jacketmult)
			printf("7. Step incr --- %s", step_incr)
	--		arszi_psy.show_message(string.format("%04d/%03d", summ, obj:visibility_threshold()))
			actor_menu.set_msg(1, strformat("Threshold: %s/%s || (Lumin: %s | Veloc: %s | Dist: %s | Weight: %s | Total per update: %s)", r(summ,2), obj:visibility_threshold(), r(Luminocity,2), r(Velocity,2), r(eq_dist,2), r(weight,2), r(step_incr,2) ))
		end

		if obj == nil then
			summ = 0
		end

	end
--===============================================


	return step_incr
end

--======== luminosity extra ====================
function andruxa(animegif)
	return 0.21 * animegif.x + 0.72 * animegif.y + 0.07 * animegif.z
end

function lights_lum(andre)
	local andlum = andre
	local andsun =  andruxa(weather.get_value_vector("sun_color"))
	local andhem = andruxa(weather.get_value_vector("hemisphere_color"))
	andlum = (math.max(andhem, andsun))

	return andlum
end

function actor_on_weapon_fired()
	local wpn = db.actor:active_item()
	if not (wpn) then return end
	if not (IsWeapon(wpn)) or IsMelee(wpn) or wpn:weapon_is_silencer() then return end

	pewpewmult = 7
	CreateTimeEvent("xcvb", "wpn_fired_stop", 0.16, wpn_fired_stop)
	alert = true
	CreateTimeEvent("snk", "alert_stop", 3.0, alert_stop)
end

function wpn_fired_stop()
		pewpewmult = 0
	return true
end

function alert_stop()
		alert = false
	return true
end

function icon_lum()
	local act_lum = db.actor:get_luminocity()
	local dblum = (act_lum + act_lum^0.5 + lights_lum()) / 3 + camp_lum.luminocity_inc
	local luminocity_icon = is_r1 and (act_lum)^0.7 or dblum

	return luminocity_icon
end

--========== outfit/camo =================

local ghil_blindness_koeff = 100

function on_option_change()
	ghil_blindness_koeff = ghillie_stealth_mcm.get_config("visibility")
	mcm_dist_mult = stealth_mcm.get_config("distance")
	mcm_vel_mult = stealth_mcm.get_config("velocity")
	mcm_weight_mult = stealth_mcm.get_config("weight")
	mcm_lum_mult = stealth_mcm.get_config("luminocity")
	mcm_low = stealth_mcm.get_config("low_crouch")
	mcm_crouch = stealth_mcm.get_config("crouch")
	enable_debug = stealth_mcm.get_config("debugx")
	michiko_patch = stealth_mcm.get_config("michiko_patch")
	alert_mult = ghillie_stealth_mcm.get_config("firing_alert")
end

local g_flag = false
local surface = false
local camo_surfaces = {"earth", "dirt", "grass", "bush"}
function actor_on_footstep(mat)
	for n, val in next, camo_surfaces do
		if string.find(mat, val) then
			surface = true
			if g_flag then
				get_camo_k = ghil_blindness_koeff
			end
			return
		else
			get_camo_k = 0
			surface = false
		end
	end
end

function slot_in_out(obj)
	if not IsOutfit(obj) then return end
	local outfit = db.actor:item_in_slot(7)
	local kind = outfit and ini_sys:r_string_ex(outfit:section(),"kind")
	jacketmult = kind and jacket_t[kind] or 1
	local backpack = db.actor:item_in_slot(13)
	if backpack and (backpack:section() == "ghillie_outfit") then
		g_flag = true
		if surface then
			get_camo_k = ghil_blindness_koeff
		else get_camo_k = 0
		end
	else
		get_camo_k = 0
		g_flag = false
	end
end

function actor_on_first_update()
	for i=1,13 do
		local obj = db.actor:item_in_slot(i)
		slot_in_out(obj)
	end

end

--===================================
function on_game_start()
	RegisterScriptCallback("actor_on_weapon_fired", actor_on_weapon_fired)
	RegisterScriptCallback("actor_item_to_slot", slot_in_out)
	RegisterScriptCallback("actor_item_to_ruck", slot_in_out)
	RegisterScriptCallback("actor_on_item_drop", slot_in_out)
	RegisterScriptCallback("actor_on_first_update", actor_on_first_update)
	RegisterScriptCallback("actor_on_footstep", actor_on_footstep)
	RegisterScriptCallback("on_option_change", on_option_change)
	on_option_change()
end